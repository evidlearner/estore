/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ibm.rho.estore.api;

import com.ibm.rho.estore.model.FirstPage;
import com.ibm.rho.estore.model.Item;
import com.ibm.rho.estore.model.LastPage;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;

import java.util.Collection;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-07-24T08:05:32.010Z")

@Api(value = "FirstPage/LastPage", description = "the First/Last Page API")
public interface FirstPageApi {

	/*
	 * @ApiOperation(value = "Find product cart information", nickname =
	 * "getProductCart", notes =
	 * "Find product inventory information from data store", response = Item.class,
	 * tags={ "product", })
	 * 
	 * @ApiResponses(value = {
	 * 
	 * @ApiResponse(code = 200, message = "successful operation", response =
	 * Item.class),
	 * 
	 * @ApiResponse(code = 400, message = "Invalid item ID"),
	 * 
	 * @ApiResponse(code = 404, message = "Item Id not found") })
	 * 
	 * @RequestMapping(value = "/inventory/product/{itemId}", produces = {
	 * "application/xml", "application/json" }, method = RequestMethod.GET)
	 * ResponseEntity<Item> getProductInventory(@ApiParam(value =
	 * "ID of product for which inventory details to be sent",required=
	 * true) @PathVariable("itemId") String itemId);
	 */
    
    @RequestMapping(value = "/api/first",
    		method = RequestMethod.GET)
    		ResponseEntity<Collection<FirstPage>> getFirstPage();
    
    @RequestMapping(value = "/api/last/{customerid}",
    		method = RequestMethod.GET)
    		ResponseEntity<Collection<LastPage>> getLastPage(@PathVariable("customerid") String customerid);
    
    
}
